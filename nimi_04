#include <iostream>
#include <string>
#include <vector>
using namespace std;
class Book {
public:
    string title;
    string author;
    Book(string title, string author) : title(title), author(author) {}
};

class BookManager {
private:
    vector<Book> books;
public:

    void addBook(string title, string author) {
        Book book1(title, author);
        books.push_back(book1);
    }

    void displayAllBooks() {
        for (int i = 0; i < books.size(); i++) {
            cout << "Title: " << books[i].title << ", Author: " << books[i].author << endl;
        }
    }


    void searchByTitle(string title) {
        bool found = false;
        for (int i = 0; i < books.size(); i++) {
            if (books[i].title == title) {
                cout << "Found Book - Title: " << books[i].title << ", Author: " << books[1].author << endl;
                found = true;
            }
        }
        if (!found) {
            cout << "No book found with title: " << title << endl;
        }
    }


    void searchByAuthor(string author) {
        bool found = false;
        for (int i = 0; i < books.size(); i++) {
            if (books[i].author == author) {
                cout << "Found Book - Title: " << books[1].title << ", Author: " << books[1].author << endl;
                found = true;
            }
        }
        if (!found) {
            cout << "No book found with author: " << author << endl;
        }
    }
};

int main() {
    BookManager manager;

    // 책 추가
    manager.addBook("한강", "한강");
    manager.addBook("난장이가 쏘아올린 작은 공", "조세희");
    manager.addBook("소나기", "황순원");

    // 모든 책 출력
    cout << "All Books:" << endl;
    manager.displayAllBooks();

    // 제목으로 검색
    cout << "\nSearch by Title:" << endl;
    manager.searchByTitle("소나기");

    // 저자로 검색
    cout << "\nSearch by Author:" << endl;
    manager.searchByAuthor("조세희");

    return 0;
}
